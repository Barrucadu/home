;; -*- lisp -*-

;;;;; Dependencies ;;;;;
; - emacs-pkgbuild-mode-git (AUR)
; - solarized-theme (Marmalade)

;;;;; Package Management ;;;;;
(require 'package)
(package-initialize)
(add-to-list 'package-archives
             '("elpa" . "http://tromey.com/elpa/"))
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/"))

;;;;; Appearence ;;;;;
(load-theme 'solarized-dark t)

;;;;; Behaviour ;;;;;
; Initial mode
(setq initial-major-mode 'org-mode)

; Transparent encryption
(require 'epa-file)
(epa-file-enable)

; Tabs instead of spaces
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)

; Spell checking
(setq ispell-program-name "asell")

; Backup files
(setq make-backup-files nil)

; Line-killing
(setq kill-whole-line t)

; Splash screen
(setq inhibit-splash-screen t)

; Highlight matching parentheses and other such characters
(show-paren-mode 1)
(setq show-paren-delay 0)

; Change yes-or-no to y-or-n
(defalias 'yes-or-no-p 'y-or-n-p)

;;;;; Keybindings ;;;;;
; Helper functions
(defun switch-to-previous-buffer ()
  (interactive)
  (switch-to-buffer (other-buffer)))

; Bindings
(global-set-key [?\C-x ?w]      'delete-horizontal-space)
(global-set-key [?\C-x ?g]      'goto-line)
(global-set-key [?\C-x ?i]      'indent-according-to-mode)
(global-set-key [?\C-x ?\C-u]   'undo)
(global-set-key [?\M-O <up>]    'backward-paragraph)
(global-set-key [?\M-O <down>]  'forward-paragraph)
(global-set-key [?\M-O <left>]  'forward-word)
(global-set-key [?\M-O <right>] 'backward-word)
(global-set-key [?\C-x ?\C-x]   'switch-to-previous-buffer)

;;;;; Editing Modes ;;;;;
; pkgbuild-mode
(require 'pkgbuild-mode)
(add-to-list 'auto-mode-alist '("/PKGBUILD$" . pkgbuild-mode))

; python-mode
(autoload 'python-mode "python-mode" "Python editing mode." t)
(add-to-list 'auto-mode-alist '("\\.py$" . python-mode))

; haskell-mode
(require 'haskell-mode)
(add-to-list 'auto-mode-alist '("\\.hs$"  . haskell-mode))
(add-to-list 'auto-mode-alist '("\\.lhs$" . literate-haskell-mode))

(add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)
(add-hook 'haskell-mode-hook 'turn-on-haskell-indent)

(setq haskell-font-lock-symbols t)
