## -*- shell-script -*-

### VC info -- only does git for now.

function _prompt_vc_git() {
  if git status &>/dev/null; then
    local gitstat="`git status 2>/dev/null`"
    local colour=$fgreen

    if [[ $(echo "${gitstat}" | grep -c "^Changes to be committed:$") > 0 ]]; then
      colour=$fyellow
    elif [[ $(echo "${gitstat}" | grep -c "^\(Untracked files:\|Changed but not updated:\)$") > 0 ]]; then
      colour=$fred
    elif echo ${gitstat} | grep "^Your branch is behind" &>/dev/null; then
      colour=$fmagenta
    elif echo ${gitstat} | grep "^Your branch is ahead" &>/dev/null; then
      ccolour=$fmagenta
    fi

    local ref=$(git symbolic-ref HEAD 2> /dev/null) || return 1
    local branch=${ref#refs/heads/}

    echo "${colour}[${branch}]${default}"
  fi
}

function _prompt_vc() {
  _prompt_vc_git
}

### Setting the prompt

function _prompt_precmd()
{
  # Last command status
  local cmdstatus=$?
  local sadface=`[ "$cmdstatus" != "0" ] && echo " ${fred}:(${default} "`

  # Colours
  local usrcolour=`[ $UID != 0 ]    && echo $fbblue || echo $fbred`
  local dircolour=`[ -w "\`pwd\`" ] && echo $fbcyan || echo $fbred`

  # Host
  local prompt_host="${fbyellow}${HOST}${default}"

  # Environment
  local prompt_env=`[ ! -z $NIX_PERSISTENT_ENV ] && echo " ${fbmagenta}{${NIX_PERSISTENT_ENV}}${default}"`

  # Version control
  local prompt_vc=`_prompt_vc`
  if [[ ! -z $prompt_vc ]]; then
    prompt_vc=" $prompt_vc"
  fi

  export PROMPT="${prompt_host}${prompt_env}${prompt_vc}${sadface} ${usrcolour}>>>${default}  "
  export RPROMPT="${dircolour}%2~${default}"
}

export PS2="${fblue}%B%_%b >${default} "
export PS3="${fyellow}%Bselect%b:${default} "

precmd_functions+=(_prompt_precmd)
