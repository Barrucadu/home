## -*- shell-script -*-

# System
function start()
{
    for arg in "${*[@]}"; do
        sudo /etc/rc.d/$arg start
    done
}

function stop()
{
    for arg in "${*[@]}"; do
        sudo /etc/rc.d/$arg stop
    done
}

function restart()
{
    for arg in "${*[@]}"; do
	    sudo /etc/rc.d/$arg restart
    done
}

function reprobe()
{
    for arg in "${*[@]}"; do
	    sudo modprobe -r $arg
        sudo modprobe $arg
    done
}

# Running programs
function r()
{
	$* &>/dev/null &
	disown %%
}

function re()
{
	$* &>/dev/null &
	disown %%
	exit
}

# Git
function commit()
{
    git add .

    if [[ ! -z "$1" ]]; then
        git commit -m "$1"
    else
        git commit
    fi
}

function gith()
{
    pushd ~
    commit $1
    pushd .git
    git push origin master
    popd
    popd
}

function giter()
{
    pushd ~/projects/erasmus
    commit $1
    git push github master
    popd
}

function gituw()
{
    pushd ~/websites/uzbl.org
    commit $1
    git push uzbl-website master
    popd
}

function gitwii()
{
    pushd ~/projects/wiipen
    commit $1
    git push wiipen master
    popd
}

function gitbar()
{
    pushd ~/websites/barrucadu.co.uk/www
    commit $1
    git push github master
    popd
}

function gitei()
{
    cd /share/eihort-www
    commit $1
    git push github master
}

# FTP
function upload()
{
    ncftp barrucadu <<EOF
cd $2
put $1
exit
EOF
}

function download()
{
    pushd /tmp
    ncftp barrucadu <<EOF
get $1
exit
EOF
    mv $(basename $1) $2
    popd $dir
}

function ou()
{
    emacs -nw $1
    ncftp barrucadu <<EOF
cd $2
put $1
exit
EOF
}

# Package Management
function pkgroot ()
{
    pkginfo=`pacman -Qi $1`
    echo $pkginfo \
        | grep -q "Explicitly installed" \
            && echo $1 \
            || pkgroot "`echo $pkginfo | sed "/Required By.*/!d" | sed "s/.*: \([a-z\-\+\.0-9]*\).*/\\1/"`"

}


function pkginfo ()
{
    pacman -Qi $1 || pacman -Si $1
}

# RFCs / Manpages

function rfc()
{
    rfc=/usr/share/doc/rfc/txt/rfc$1.txt

    if [ -f $rfc ]; then
	sed 's/\f//' $rfc | $PAGER
    else
	echo "RFC $1 not found."
    fi
}

function man()
{
    rfc=/usr/share/doc/rfc/txt/rfc$*.txt

    if [[ -f $rfc ]]; then
	rfc $*
    else
	/usr/bin/man $@
    fi
}

function rfcsearch()
{
    grep "$*" -m1 /usr/share/doc/rfc/txt/rfc*.txt
}

# Misc
function mkd()
{
	mkdir -p "$1"
	cd "$1"
}

function timer()
{
    start=`date +%s`
    $*
    stop=`date +%s`
    
    duration=$[$stop - $start]
    echo "Duration: $duration s"
}

function extract ()
{
    case $1 in
        *.tar.bz2)
            tar xvjf $1;;
        *.tar.gz)
            tar xvzf $1;;
        *.bz2)
            bunzip2 $1;;
        *.rar)
            rar x $1;;
        *.gz)
            gunzip $1;;
        *.tar)
            tar xvf $1;;
        *.tbz2)
            tar xvjf $1;;
        *.tgz)
            tar xvzf $1;;
        *.zip)
            unzip $1;;
        *.Z)
            uncompress $1;;
        *.7z)
            7z x $1;;
        *)
            echo "don't know how to extract '$1'...";;
    esac
}

function files ()
{
    ls -Al $1 | wc -l
}

function define ()
{
    dictionary="english"
    [[ "$2" != "" ]] && dictionary=$2
    echo "DEFINE $dictionary $1\nQUIT" | netcat dict.org 2628
}

function prod()
{
    ping $1 | /home/barrucadu/bin/prod
}

function calc()
{
    echo "print($1)" | python3
}

function ahurd()
{
    remotes=(files wiki)

    if [[ "$1" == "down" ]]; then
	for i in $remotes; do
	    fusermount -u /hurd/$i
	done
    else
	for i in $remotes; do
	    sshfs archhurd@nitti.dreamhost.com:/home/archhurd/$i.archhurd.org/ /hurd/$i -o uid=1000,gid=100
	done
    fi
}

function nbd()
{
    device=""
    port=2000
    host=""

    if [[ -z "$3" ]]; then
	if ifconfig wlan0 &>/dev/null; then # On my desktop
	    host=eihort
	else                                # Not on my laptop
	    host=azathoth
	fi
    else
	host=$3
    fi

    # Allow specifying a device file, name, label, or UUID.
    if [[ -e "$2" ]]; then
	device=$2
    elif [[ -e "/dev/$2" ]]; then
	device="/dev/$2"
    elif [[ -e "/dev/disk/by-label/$2" ]]; then
	device="/dev/disk/by-label/$2"
    elif [[ -e "/dev/disk/by-uuid/$2" ]]; then
	device="/dev/disk/by-uuid/$2"
    else
	echo "Unknown device '$2'" 1>&2
	return 1
    fi

    if [[ "$1" == "share" ]]; then
	sudo nbd-server $port $device
    elif [[ "$1" == "gain" ]]; then
	sudo nbd-client $host $port $device
    elif [[ "$1" == "free" ]]; then
	sudo nbd-client -d $device
    else
	echo "Unknown method '$1'." 1>&2
	return 2
    fi
}