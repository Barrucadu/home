#!/bin/zsh

# Backup script:
#   Takes full and incremental backups, to a local directory, using rsync.
#   SSH transfer requires root login be allowed on the client, and SSH keys
#   be exchanged for passwordless login. This script should be run as root.

################################## VARIABLES ###################################

# General-purpose variables:
#  COMPUTER:   hostname of the backup server.
#  COMPUTERS:  hostnames of computers (other than localhost) to back up.
#  BACKUPDEV:  device to store the backup on.
#  BACKUPDIR:  directory to store the backup in
#  TYPE:       the type of backup (full, inc)
COMPUTER=`hostname`
COMPUTERS=(azathoth)
BACKUPDEV=/dev/disk/by-label/BackupHDD
BACKUPDIR=/media/BackupHDD
TYPE=$1

# sendxmpp-related variables:
#  SENDXMPP: path to sendxmpp
#  SRVADMIN: JID of server administrator
SENDXMPP=/usr/bin/perlbin/site/sendxmpp
SRVADMIN=mike@barrucadu.co.uk

# rsync-related variables:
#  FULLDIR:   directory for last full backup
#  DIR:       directory to store current backup
#  EXCLUDE:   path of global rsync excludes files
#  RSYNCARGS: arguments passed to rsync
#  FULLARGS:  arguments passed to rsync in a full backup
#  INCARGS:   arguments passed to rsync in an incremental backup
#  SSHARGS:   arguments passed to rsync in a backup over SSH
FULLDIR=`date +%Y-%m`
DIR=`date +%Y-%m-%d`

if [[ "$TYPE" == "full" ]]; then
    DIR=$FULLDIR
fi

EXCLUDE=/etc/backup.d/
RSYNCARGS=(-avz --numeric-ids --delete --exclude-from=${EXCLUDE}global --stats)
FULLARGS=()
INCARGS=(--link-dest=../$FULLDIR/)
SSHARGS=(-e ssh)

################################# MAIN SCRIPT ##################################

function senderr()
{
    msg=$1
    echo "[backup] $1" | $SENDXMPP $SRVADMIN
}

function checkhost()
{
    host=$1
    if ping -c1 $host &>/dev/null; then
        return true
    else
        senderr "$host offline."
        return false
    fi
}

function backuphost()
{
    host=$1
    ssh=$2
    source=/
    args=$FULLARGS
    args2=()

    if $ssh; then
        source="root@$host:/"
        args2=$SSHARGS
    fi

    if [[ "$TYPE" == "inc" ]]; then
        args=$INCARGS
    fi

    rsync $RSYNCARGS $args $args2 --exclude-from=${EXCLUDE}${host} $source $BACKUPDIR/$host/$DIR/
}

if [[ "$TYPE" != "full" ]] && [[ "$TYPE" != "inc" ]]; then
    senderr "Usage: backup [full|inc] ($TYPE given)."
    return 1
fi

if [[ -e $BACKUPDEV ]]; then
    if ! mount -o remount,rw $BACKUPDEV; then
        if ! mount -o rw $BACKUPDEV; then
            senderr "$BACKUPDEV will not mount."
            return 1
        fi
    fi
else
    senderr "$BACKUPDEV not found."
    return 1
fi

backuphost $COMPUTER false
for host in $COMPUTERS; do
    checkhost $host && backuphost $host true
done

mount -o remount,ro $BACKUPDEV
