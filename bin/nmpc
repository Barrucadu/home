#!/bin/zsh

MPDSERVER="localhost"
MPDPORT="6600"

function help()
{
    echo "nmpc - a simple netcat-powered MPD client."
    echo
    echo "Usage: nmpc [command] <args>"
    echo
    echo "MPD Commands:"
    echo "  These are just sent on to MPD as-is."
    echo "     clear"
    echo "     next"
    echo "     previous"
    echo "     play"
    echo "     pause"
    echo "     stop"
    echo "     update"
    echo "     find <string type> <string what>"
    echo "     list <metadata arg1> [<metadata arg2> <search term>]"
    echo "     add <string>"
    echo "     delete <int song>"
    echo "     save <string playlist name>"
    echo "     rm <string playlist name>"
    echo "     shuffle"
    echo "     crossfade"
    echo "     setvol <int vol>"
    echo
    echo "NMPC Commands:"
    echo "  These are more advanced commands handled by nmpc"
    echo "     toggle              - toggle the play/pause state"
    echo "     raw                 - send \$2 as a command to MPD"
    echo "     info                - information about MPD."
    echo "     playing             - information about the current playlist."
    echo "     playlist <playlist> - clear the playlist and load the specified playlist."
    echo "     playlists           - list the playlists."
}

function line()
{
    echo "$1" | grep -i "$2: " | sed "s/$2: //i"
}

function rawcmd()
{
    echo "$1\nclose" | netcat $MPDSERVER $MPDPORT
}

function mpdfunc()
{
    arglist=$1

    [ "$2" != "" ] &&                   arglist="$arglist $2"
    [ "$3" != "" ] && [ "$4" = "" ]  && arglist="$arglist \"$3\""
    [ "$3" != "" ] && [ "$4" != "" ] && arglist="$arglist $3 \"$4\""

    [ "$1" = "add" ] || [ "$1" = "save" ] || [ "$1" = "rm" ] && arglist="$1 \"$2\""

    rawcmd "$arglist" | sed "/^OK.*$/d"
}

function nmpcfunc()
{
    case $1 in
        "toggle")
            if mpdfunc status | grep -q "state: play"; then
                rawcmd pause
            else
                rawcmd play
            fi;;
        "raw")
            rawcmd "$2";;
        "info")
            info=`rawcmd stats | sed "/^OK.*$/d"`

            playtime=`line $info db_playtime`
            artists=`line $info artists`
            albums=`line $info albums`
            songs=`line $info songs`

            runtime=`printf "%02d:%02d:%02d\n" $[$playtime / 3600 ] $[$playtime / 60 % 60] $[$playtime % 60]`
            echo "$artists artists, $albums albums, $songs songs, $runtime play time.";;
        "playing")
            info=`rawcmd status | sed "/^OK.*$/d"`
            sinfo=`rawcmd currentsong | sed "/^OK.*$/d"`

            track=`line $sinfo title`
            artist=`line $sinfo artist`
            album=`line $sinfo album`
            state=`line $info state`

            volume=`line $info volume`
            repeat="on";    [ "`line $info repeat`" = "0" ] && repeat="off"
            random="on";    [ "`line $info random`" = "0" ] && random="off"
            crossfade="on"; [ "`line $info xfade`"  = "0" ] && crossfade="off"
            
            echo "$track, by $artist in $album [$state]"
            echo "$volume% volume, repeat $repeat, random $random, crossfade $crossfade";;
        "playlist")
            rawcmd clear | sed "/^OK.*$/d"
            rawcmd "playlist \"$2\"" | sed "/^OK.*$/d";;
        "playlists")
            info=`rawcmd lsinfo | sed "/^OK.*$/d"`
            echo $info | grep "playlist: " | sed "s/playlist: //";;
        esac
}

function error()
{
    echo "Unknown command: $*"
}

case $1 in
    "-h" | "--help")
        help;;

    "clear" | "next" | "previous" | "play" | "pause" | "stop" | "update" | "find" | "list" | "add" | "delete" | "save" | "rm" | "shuffle" | "crossfade" | "setvol")
        mpdfunc $*;;

    "toggle" | "raw" | "info" | "playing" | "playlist" | "playlists")
        nmpcfunc $*;;

    "")
        nmpcfunc playing;;

    *)
        error $*;;
esac