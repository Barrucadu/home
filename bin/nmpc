#!/bin/zsh

MPDSERVER="localhost"
MPDPORT="6600"

function help()
{
    echo "nmpc - a simple netcat-powered MPD client."
    echo
    echo "Usage: nmpc [command] <args>"
    echo
    echo "MPD Commands:"
    echo "  These are just sent on to MPD as-is."
    echo "     clear"
    echo "     next"
    echo "     previous"
    echo "     play"
    echo "     pause"
    echo "     stop"
    echo "     update"
    echo "     find <string type> <string what>"
    echo "     list <metadata arg1> [<metadata arg2> <search term>]"
    echo
    echo "NMPC Commands:"
    echo "  These are more advanced commands handled by nmpc"
    echo "     toggle  - toggle the play/pauses state"
    echo "     raw     - send \$2 as a command to MPD"
    echo "     info    - information about MPD."
}

function line()
{
    echo "$1" | head -n $[$2 + 1] | tail -n 1
}

function rawcmd()
{
    echo "$1\nclose" | netcat $MPDSERVER $MPDPORT | sed "/^OK.*$/d"
}

function mpdfunc()
{
    arglist=$1

    [ "$2" != "" ] &&                   arglist="$arglist $2"
    [ "$3" != "" ] && [ "$4" = "" ]  && arglist="$arglist \"$3\""
    [ "$3" != "" ] && [ "$4" != "" ] && arglist="$arglist $3 \"$4\""

    rawcmd "$arglist"
}

function nmpcfunc()
{
    case $1 in
        "toggle")
            if mpdfunc status | grep -q "state: play"; then
                rawcmd pause
            else
                rawcmd play
            fi;;
        "raw")
            rawcmd "$2";;
        "info")
            stats=`rawcmd stats | sed "s/.*: //"`
            runtime=`printf "%02d:%02d:%02d\n" $[\`line $stats 5\` / 3600 ] $[\`line $stats 5\` / 60 % 60] $[\`line $stats 5\` % 60]`
            echo "`line $stats 0` artists, `line $stats 1` albums, `line $stats 2` songs, $runtime play time."
        esac
}

function error()
{
    echo "Unknown command: $*"
}

case $1 in
    "" | "-h" | "--help")
        help;;

    "clear" | "next" | "previous" | "play" | "pause" | "stop" | "update" | "find" | "list")
        mpdfunc $*;;

    "toggle" | "raw" | "info")
        nmpcfunc $*;;

    *)
        error $*;;
esac